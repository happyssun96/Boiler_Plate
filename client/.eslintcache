[{"C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\index.js":"1","C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\App.js":"2","C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\reportWebVitals.js":"3","C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"4","C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"5","C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"6","C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\_reducers\\index.js":"7","C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\_actions\\user_action.js":"8","C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\_actions\\types.js":"9","C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\_reducers\\user_reducer.js":"10","C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\hoc\\auth.js":"11"},{"size":982,"mtime":1610543317226,"results":"12","hashOfConfig":"13"},{"size":1008,"mtime":1610555864548,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":903,"mtime":1610556446926,"results":"16","hashOfConfig":"13"},{"size":1636,"mtime":1610551333072,"results":"17","hashOfConfig":"13"},{"size":2373,"mtime":1610553207972,"results":"18","hashOfConfig":"13"},{"size":164,"mtime":1610550751111,"results":"19","hashOfConfig":"13"},{"size":743,"mtime":1610555864556,"results":"20","hashOfConfig":"13"},{"size":127,"mtime":1610555864557,"results":"21","hashOfConfig":"13"},{"size":470,"mtime":1610555864556,"results":"22","hashOfConfig":"13"},{"size":1133,"mtime":1610555908851,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1nwklfj",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\index.js",[],["50","51"],"C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\App.js",["52"],"import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport LandingPage from './components/views/LandingPage/LandingPage'\nimport LoginPage from './components/views/LoginPage/LoginPage'\nimport RegisterPage from './components/views/RegisterPage/RegisterPage'\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Switch>\n          <Route exact path=\"/\" component={LandingPage} />\n\n          <Route exact path=\"/login\" component={LoginPage} />\n  \n          <Route exact path=\"/register\" component={RegisterPage} />\n  \n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\components\\views\\LandingPage\\LandingPage.js",[],"C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["53"],"import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginUser } from \"../../../_actions/user_action\";\r\nimport { withRouter } from \"react-router-dom\";\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault(); // 페이지가 refresh 되는 것을 방지한다.\r\n\r\n    let body = {\r\n      email: Email,\r\n      password: Password,\r\n    };\r\n\r\n    dispatch(loginUser(body)).then((response) => {\r\n      if (response.payload.loginSuccess) {\r\n        props.history.push(\"/\");\r\n      } else {\r\n        alert(\"Error˝\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <form\r\n        style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        <label>Email</label>\r\n        <input type=\"email\" value={Email} onChange={onEmailHandler} />\r\n        <label>Password</label>\r\n        <input type=\"password\" value={Password} onChange={onPasswordHandler} />\r\n        <br />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["54"],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../../../_actions/user_action\";\r\nimport Axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Name, setName] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n\r\n  const onNameHandler = (event) => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n\r\n  const onConfirmPasswordHandler = (event) => {\r\n    setConfirmPassword(event.currentTarget.value);\r\n  };\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault(); // 페이지가 refresh 되는 것을 방지한다.\r\n\r\n    if (Password !== ConfirmPassword) {\r\n      return alert(\"비밀번호가 다릅니다...\");\r\n    }\r\n\r\n    let body = {\r\n      email: Email,\r\n      password: Password,\r\n      name: Name,\r\n    };\r\n    dispatch(registerUser(body)).then((response) => {\r\n      if (response.payload.success) {\r\n        props.history.push(\"/login\");\r\n      } else {\r\n        alert(\"Failed to sign up\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <form\r\n        style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        <label>Email</label>\r\n        <input type=\"email\" value={Email} onChange={onEmailHandler} />\r\n\r\n        <label>Name</label>\r\n        <input type=\"text\" value={Name} onChange={onNameHandler} />\r\n\r\n        <label>Password</label>\r\n        <input type=\"password\" value={Password} onChange={onPasswordHandler} />\r\n\r\n        <label>Confirm Password</label>\r\n        <input\r\n          type=\"password\"\r\n          value={ConfirmPassword}\r\n          onChange={onConfirmPasswordHandler}\r\n        />\r\n\r\n        <br />\r\n        <button type=\"submit\">회원 가입</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(RegisterPage);\r\n","C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\_reducers\\index.js",[],"C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\_actions\\user_action.js",[],"C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\_actions\\types.js",[],"C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\_reducers\\user_reducer.js",["55","56","57","58"],"C:\\Users\\USER\\Desktop\\boiler-plate\\client\\src\\hoc\\auth.js",["59","60","61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":6,"column":3,"nodeType":"68","messageId":"69","endLine":6,"endColumn":7},{"ruleId":"66","severity":1,"message":"70","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":13},{"ruleId":"66","severity":1,"message":"70","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":13},{"ruleId":"71","severity":1,"message":"72","line":3,"column":1,"nodeType":"73","endLine":17,"endColumn":2},{"ruleId":"74","severity":1,"message":"75","line":7,"column":7,"nodeType":"76","messageId":"77","endLine":7,"endColumn":13},{"ruleId":"74","severity":1,"message":"75","line":10,"column":7,"nodeType":"76","messageId":"77","endLine":10,"endColumn":13},{"ruleId":"74","severity":1,"message":"75","line":13,"column":7,"nodeType":"76","messageId":"77","endLine":13,"endColumn":13},{"ruleId":"66","severity":1,"message":"70","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":13},{"ruleId":"71","severity":1,"message":"72","line":6,"column":1,"nodeType":"73","endLine":35,"endColumn":2},{"ruleId":"78","severity":1,"message":"79","line":30,"column":8,"nodeType":"80","endLine":30,"endColumn":10,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"87","text":"88"},[933,935],"[dispatch, props.history]"]